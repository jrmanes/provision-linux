---
 - name: Import vars file
   include_vars: "../../vars/main.yml"

 - name: Install Golang Dependencies
   apt:
     pkg: [ 'curl', 'gcc', 'git', 'findutils', 'make', 'rsync', 'tar' ]
     state: present
     update_cache: yes

 - name : Create needed paths for installation
   file:
     path: "{{ item }}"
     state: directory
     owner: "root"
     group: "root"
   with_items:
     - "{{ development.golang.install_dir }}go{{ development.golang.version }}"
     - "{{ development.golang.download_dir }}{{ development.golang.version }}/"

 - name: "Register current Golang version"
   stat:
     path: "a_{{ development.golang.install_dir }}go{{ development.golang.version }}/go/bin/go"
   register: current_go_version_exists
   become: no

 - name: "Check var"
   debug:
    var: current_go_version_exists

 - name: "Download Golang {{ development.golang.version }}"
   get_url:
     url: "{{ development.golang.mirror }}{{ development.golang.version }}.linux-amd64.tar.gz"
     dest: "{{ development.golang.download_dir }}{{ development.golang.version }}/"
     force: no
   when: current_go_version_exists.stat.exists == false 

 - name: "Extract Golang {{ development.golang.version }}"
   ansible.builtin.unarchive:
     src: "{{ development.golang.download_dir }}{{ development.golang.version }}/go{{ development.golang.version  }}.linux-amd64.tar.gz"
     dest: "{{ development.golang.install_dir }}go{{ development.golang.version }}/"
   when: current_go_version_exists.stat.exists == false 
